// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Source {
  ROOM
  TAKEAWAY
  DELIVERY
  TABLE
}

enum PaymentMode {
  CASH
  CARD
  UPI
  WALLET
}

model Order {
  id        String   @id @default(cuid())
  billNumber Int @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  status    String?
  totalAmount Float
  totalPaid Float
  source   Source @default(ROOM)
  tableNo   Int?
  items     OrderItem[]
  payments  Payment[]
}

model OrderItem {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  price     Float
  quantity  Int
  amount    Float 
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   String
  foodItem foodItem @relation(fields: [foodItemId], references: [id])
  foodItemId String
  
}

model Payment {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  amount    Float
  mode      PaymentMode @default(CASH)
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
}

model foodItem {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  price     Float
  orderItem OrderItem[]
}



